name: Split plants-se-001

on:
  workflow_dispatch:
  schedule:
    - cron: '25 12 * * *'  # 15:25 بعدازظهر به وقت ترکیه (TRT=UTC+3)

permissions:
  contents: write

env:
  CATEGORY: plants
  SUBDIR: seeds
  CODE: se
  STEM: se-001
  SCRIPT: scripts/plants/se-001s.mjs
  STAGE_GLOB: daily/plants/seeds/sliced/*.png

jobs:
  split:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      # جلوگیری از هم‌پوشانی اجرای موازی
      - name: Random jitter (10–40s)
        shell: bash
        run: sleep $((RANDOM % 30 + 10))

      - name: Pull latest changes (pre-run)
        shell: bash
        run: |
          git fetch origin main
          git pull --rebase origin main || true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install canvas system deps
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libcairo2-dev libpango1.0-dev \
            libjpeg-dev libgif-dev librsvg2-dev

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install npm deps
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Wait for input image (max ~5m)
        shell: bash
        run: |
          INPUT="daily/$CATEGORY/$SUBDIR/${STEM}.png"
          for i in {1..10}; do
            if [ -f "$INPUT" ]; then
              echo "✅ Found $INPUT"
              break
            fi
            echo "⏳ Waiting for $INPUT ($i/10)…"
            sleep 30
          done
          [ -f "$INPUT" ] || { echo "❌ Missing input $INPUT"; exit 1; }

      - name: Run splitter
        shell: bash
        run: node "$SCRIPT"

      - name: Pull latest changes (pre-push)
        shell: bash
        run: |
          git fetch origin main
          git pull --rebase origin main || true

      - name: Stage sliced images only
        shell: bash
        run: |
          git config user.name "selglo-bot"
          git config user.email "bot@selglo.com"
          git add -- ":(glob)$STAGE_GLOB"
          if git diff --cached --quiet; then
            echo "✅ No sliced images to commit"
            exit 0
          fi
          echo "🔍 Staged:"
          git diff --cached --name-only

      - name: Commit and push with retry (backoff)
        shell: bash
        run: |
          COMMIT_MSG="Auto-split: ${CATEGORY}/${SUBDIR} from ${STEM}.png"
          git commit -m "$COMMIT_MSG" || exit 0

          pushed=0
          for attempt in 1 2 3 4 5; do
            if git push origin HEAD:main; then
              echo "✅ Push succeeded"
              pushed=1
              break
            fi
            echo "⚠️ Push failed (attempt $attempt). Rebase & retry after backoff..."
            git fetch origin main
            git pull --rebase origin main || true
            sleep $(( attempt * 8 ))
          done

          if [ "$pushed" -ne 1 ]; then
            echo "❌ Push failed after 5 attempts. Check branch protections."
            exit 1
          fi
