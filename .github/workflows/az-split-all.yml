name: Split ALL (daily)

on:
  schedule:
    - cron: '0 16 * * *'  # 19:00 TRT (UTC+3)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  split-all:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: System deps for node-canvas
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libcairo2-dev libpango1.0-dev \
            libjpeg-dev libgif-dev librsvg2-dev

      - name: Setup Node & install deps
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install npm dependencies
        run: |
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund

      - name: Run all splits sequentially
        shell: bash
        run: |
          set -e
          MANIFEST="scripts/split_manifest.csv"
          if [ ! -f "$MANIFEST" ]; then
            echo "❌ Missing $MANIFEST"
            exit 1
          fi

          while IFS=, read -r CATEGORY SUBDIR CODE STEM SCRIPT; do
            # Skip empty/commented lines
            [ -z "$CATEGORY" ] && continue
            [[ "$CATEGORY" =~ ^# ]] && continue

            echo "===== [$CODE] $CATEGORY/$SUBDIR/$STEM ====="

            # Wait up to 10 minutes (40×15s) for input PNG
            for i in {1..40}; do
              if [ -f "daily/$CATEGORY/$SUBDIR/${STEM}.png" ]; then
                break
              fi
              echo "waiting for daily/$CATEGORY/$SUBDIR/${STEM}.png …"
              sleep 15
            done

            # If input still missing, skip instead of failing the job
            if [ ! -f "daily/$CATEGORY/$SUBDIR/${STEM}.png" ]; then
              echo "⚠️ missing input → SKIP: daily/$CATEGORY/$SUBDIR/${STEM}.png"
              continue
            fi

            # Run the splitter for this row; if it fails, continue to next
            if ! CATEGORY="$CATEGORY" SUBDIR="$SUBDIR" CODE="$CODE" STEM="$STEM" node "$SCRIPT"; then
              echo "⚠️ splitter failed for [$CODE] → continue"
              continue
            fi
          done < "$MANIFEST"

      - name: Commit & push once
        shell: bash
        run: |
          git config user.name "selglo-bot"
          git config user.email "bot@selglo.com"
          git add -- ":(glob)daily/**/sliced/*.png"
          if git diff --cached --quiet; then
            echo "✅ No sliced images to commit"
            exit 0
          fi

          git commit -m "Auto-split: all groups" || exit 0

          pushed=0
          for attempt in 1 2 3; do
            if git push origin HEAD:main; then
              echo "✅ Push succeeded"
              pushed=1
              break
            fi
            echo "⚠️ Push failed (attempt $attempt). Rebase & retry…"
            git fetch origin main
            git pull --rebase origin main || true
          done

          if [ "$pushed" -ne 1 ]; then
            echo "❌ Push failed after 3 attempts. Check branch protections."
            exit 1
          fi
